import { useState, useEffect } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";

const API_KEY = "f96a152df9msh3324fff80592f69p1bf814jsne8ce4d18ef0f";
const API_URL = "https://geniuslyrics-api.p.rapidapi.com";

export default function LyricsApp() {
  const [lyricsList, setLyricsList] = useState([]);
  const [selectedLyrics, setSelectedLyrics] = useState(null);
  const [isAdmin, setIsAdmin] = useState(false);
  const [albumId, setAlbumId] = useState("938533");

  useEffect(() => {
    if (albumId) {
      fetchSongsByAlbum(albumId);
    }
    const interval = setInterval(() => fetchSongsByAlbum(albumId), 30000);
    return () => clearInterval(interval);
  }, [albumId]);

  const fetchSongsByAlbum = async (albumId) => {
    try {
      const response = await fetch(`${API_URL}/get_songs_by_album?album_id=${albumId}`, {
        method: "GET",
        headers: {
          "X-RapidAPI-Key": API_KEY,
          "X-RapidAPI-Host": "geniuslyrics-api.p.rapidapi.com"
        }
      });
      const data = await response.json();
      console.log("Songs API Response:", data);
      if (data.songs) {
        const formattedSongs = data.songs.map(song => ({
          id: song.id,
          title: song.title,
          english: "Fetching lyrics...",
          hindi: "बोल लोड हो रहे हैं..."
        }));
        setLyricsList(formattedSongs);
        fetchLyricsForSongs(formattedSongs);
      }
    } catch (error) {
      console.error("Error fetching songs by album:", error);
    }
  };

  const fetchLyricsForSongs = async (songs) => {
    const updatedSongs = await Promise.all(songs.map(async (song) => {
      try {
        const response = await fetch(`${API_URL}/get_lyrics?id=${song.id}`, {
          method: "GET",
          headers: {
            "X-RapidAPI-Key": API_KEY,
            "X-RapidAPI-Host": "geniuslyrics-api.p.rapidapi.com"
          }
        });
        const data = await response.json();
        console.log(`Lyrics API Response for ${song.title}:`, data);
        return { 
          ...song, 
          english: data.lyrics ? data.lyrics : "Lyrics not available", 
          hindi: data.hindi_lyrics ? data.hindi_lyrics : "हिंदी अनुवाद उपलब्ध नहीं है" 
        };
      } catch (error) {
        console.error(`Error fetching lyrics for ${song.title}:`, error);
        return song;
      }
    }));
    setLyricsList(updatedSongs);
  };

  return (
    <div className="p-6 max-w-4xl mx-auto">
      <h1 className="text-3xl font-bold mb-4">Lyrics by Album</h1>
      <Input
        type="text"
        placeholder="Enter Album ID"
        value={albumId}
        onChange={(e) => setAlbumId(e.target.value)}
        className="mb-4"
      />
      <Button onClick={() => fetchSongsByAlbum(albumId)} className="mb-4">Refresh Songs</Button>
      <Button onClick={() => setIsAdmin(!isAdmin)} className="mb-4 ml-2">
        {isAdmin ? "Switch to User Mode" : "Switch to Admin Mode"}
      </Button>
      {!selectedLyrics ? (
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          {lyricsList.map((song) => (
            <Card key={song.id} className="p-4 cursor-pointer" onClick={() => setSelectedLyrics(song)}>
              <CardContent>
                <h2 className="text-xl font-semibold">{song.title}</h2>
              </CardContent>
            </Card>
          ))}
        </div>
      ) : (
        <div>
          <Button onClick={() => setSelectedLyrics(null)} className="mb-4">Back to Lyrics</Button>
          <h2 className="text-2xl font-bold">{selectedLyrics.title}</h2>
          <h3 className="mt-4 text-xl font-semibold">English Lyrics</h3>
          <p className="text-gray-800 whitespace-pre-wrap">{selectedLyrics.english}</p>
          <h3 className="mt-4 text-xl font-semibold">हिंदी गीत</h3>
          <p className="text-gray-800 whitespace-pre-wrap">{selectedLyrics.hindi}</p>
        </div>
      )}
    </div>
  );
}
